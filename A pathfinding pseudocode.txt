OPEN // List of nodes to be evaluated
CLOSED // List of nodes already evaluated
add the startNode to OPEN
 
loop
        currentNode = node in OPEN with the lowest F_Cost
        remove currentNode from OPEN
        add currentNode to CLOSED
 
        if currentNode is the target node //path has been found
                return
 
        foreach neighbour of the currentNode
                if neighbour is not traversable or neighbour is in CLOSED
                        skip to the next neighbour
 
                if new path to neighbour is shorter OR neighbour is not in OPEN
                        set F_Cost of neighbour
                        set parent of neighbour to currentNode
                        if neighbour is not in OPEN
                                add neighbour to OPEN
